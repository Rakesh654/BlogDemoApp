// <auto-generated />
using System;
using BlogApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogApp.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20240319084610_addedtable")]
    partial class addedtable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlogApp.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Rakesh",
                            CreatedBy = "rk9.kumar21@gmail.com",
                            CreatedTime = new DateTime(2024, 3, 19, 8, 46, 10, 426, DateTimeKind.Utc).AddTicks(3296),
                            Description = "This is my first blog",
                            ImageUrl = "https://www.thewowstyle.com/wp-content/uploads/2015/01/images-of-nature-4.jpg",
                            Title = "First Blog",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Author = "Rakesh",
                            CreatedBy = "rk9.kumar21@gmail.com",
                            CreatedTime = new DateTime(2024, 3, 19, 8, 46, 10, 426, DateTimeKind.Utc).AddTicks(3297),
                            Description = "This is my second blog",
                            ImageUrl = "https://www.thewowstyle.com/wp-content/uploads/2015/01/images-of-nature-4.jpg",
                            Title = "Second Blog",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Author = "Rakesh",
                            CreatedBy = "rk9.kumar21@gmail.com",
                            CreatedTime = new DateTime(2024, 3, 19, 8, 46, 10, 426, DateTimeKind.Utc).AddTicks(3298),
                            Description = "This is my third blog",
                            ImageUrl = "https://www.thewowstyle.com/wp-content/uploads/2015/01/images-of-nature-4.jpg",
                            Title = "Third Blog",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BlogApp.Models.CommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommentAddedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("CommentAddedUserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BlogApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2024, 3, 19, 14, 16, 10, 426, DateTimeKind.Local).AddTicks(3187),
                            Email = "rk9.kumar21@gmail.com",
                            ImageUrl = "https://pluspng.com/img-png/user-png-icon-young-user-icon-2400.png",
                            Name = "Rakesh",
                            Password = "raka@123"
                        });
                });

            modelBuilder.Entity("BlogApp.Models.Blog", b =>
                {
                    b.HasOne("BlogApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlogApp.Models.CommentModel", b =>
                {
                    b.HasOne("BlogApp.Models.Blog", "Blog")
                        .WithMany()
                        .HasForeignKey("BlogId");

                    b.HasOne("BlogApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CommentAddedUserId");

                    b.Navigation("Blog");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
